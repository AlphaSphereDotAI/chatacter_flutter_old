name: Scan with dart-analyze
on:
  push:
    branches: [main]
  pull_request:
jobs:
  DeepSource:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-chatacter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-chatacter-
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
      - name: Run Dart Analyze
        run: dart analyze > dart_analyze.txt || true
      - name: Dart Analyze to SARIF
        uses: advanced-security/dart-analyzer-sarif@main
        with:
          input: dart_analyze.txt
          output: dart_analyze.sarif
      - name: Upload SARIF report to DeepSource
        run: |
          # Install the CLI
          curl https://deepsource.io/cli | sh
          # Send the report to DeepSource
          ./bin/deepsource report --analyzer dart-analyze --analyzer-type community --value-file ./dart_analyze.sarif
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
  # GooglePlay:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     security-events: write
  #     actions: read
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4.1.4
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Cache
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.pub-cache
  #         key: ${{ runner.os }}-chatacter-${{ hashFiles('**/pubspec.lock') }}
  #         restore-keys: ${{ runner.os }}-chatacter-
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #     - name: Install Dependencies
  #       run: flutter pub get
  #     - name: Build APK
  #       run: flutter build apk
  #     - name: Build App Bundle
  #       run: flutter build appbundle
  #     - name: Upload to Google Play
  #       uses: r0adkll/upload-google-play@v1
  #       with:
  #         serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  #         packageName: com.AlphaSphereDotAI.Chatacter
  #         releaseFiles: app/build/outputs/bundle/release/app-release.aab
  #         track: alpha
  ReleaseToGithubRelease:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-chatacter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-chatacter-
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install Dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk
      - name: Build App Bundle
        run: flutter build appbundle
      - name: Build Windows
        run: flutter build windows
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          file: ./build/windows/x64/runner/Release/chatacter.exe
          asset_name: Chatacter.exe
          overwrite: true